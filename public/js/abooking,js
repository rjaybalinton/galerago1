// Form submission handler
document.addEventListener('DOMContentLoaded', () => {
    const formIds = ['regular-tourist-form', 'day-tourist-form', 'resident-form'];
  
    formIds.forEach(formId => {
      const form = document.getElementById(formId);
      if (form) {
        form.addEventListener('submit', function (e) {
          e.preventDefault();
          generateQRCodeAndSubmit(form);
        });
      }
    });
  });
  
  // Generate QR code and submit form
  function generateQRCodeAndSubmit(form) {
    let firstName = '', lastName = '', email = '', phone = '';
  
    // Detect which form and get relevant fields
    if (form.id === 'regular-tourist-form') {
      firstName = document.getElementById("first_name").value;
      lastName = document.getElementById("last_name").value;
      email = document.getElementById("email").value;
      phone = document.getElementById("phone").value;
    } else if (form.id === 'day-tourist-form') {
      firstName = document.getElementById("day_first_name").value;
      lastName = document.getElementById("day_last_name").value;
      email = document.getElementById("day_email").value;
      phone = document.getElementById("day_phone").value;
    } else if (form.id === 'resident-form') {
      firstName = document.getElementById("res_first_name").value;
      lastName = document.getElementById("res_last_name").value;
      email = document.getElementById("res_email").value;
      phone = document.getElementById("res_phone").value;
    }
  
    const qrData = `Name: ${firstName} ${lastName}, Email: ${email}, Phone: ${phone}`;
    const qrCodeContainer = document.getElementById("qrcode");
    qrCodeContainer.innerHTML = ""; // Clear previous QR code
  
    // Generate QR code
    QRCode.toCanvas(
      document.createElement('canvas'), 
      qrData, 
      { width: 100 },
      function (error, canvas) {
        if (error) {
          console.error("QR Code Error:", error);
          alert("Failed to generate QR code.");
          return;
        }
  
        qrCodeContainer.appendChild(canvas);
  
        // Submit form data
        submitFormWithFetch(form);
      }
    );
  }
  
  // Submit form data via fetch
  function submitFormWithFetch(form) {
    const formData = new FormData(form);
    const submitBtn = form.querySelector('button[type="submit"]');
    const originalBtnText = submitBtn ? submitBtn.textContent : 'Submit';
    
    if (submitBtn) {
        submitBtn.textContent = 'Submitting...';
        submitBtn.disabled = true;
    }

    // Log form data for debugging
    console.log("Form ID:", form.id);
    console.log("Form Action:", form.action);
    for (let pair of formData.entries()) {
        console.log(pair[0] + ': ' + (pair[1] instanceof File ? pair[1].name : pair[1]));
    }

    fetch('/register2', {
        method: 'POST',
        body: formData,
        credentials: 'same-origin'
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Server error: ' + response.status);
        }
        return response.json();
    })
    .then(data => {
        console.log("Success response:", data);
        document.getElementById('success-text').textContent = data.message || 'Registration successful!';
        document.getElementById('success-message').classList.remove('hidden');
        setTimeout(() => {
            document.getElementById('success-message').classList.add('hidden');
        }, 5000);
        resetForm(form.id);
        closeModal();
    })
    .catch(error => {
        console.error("Submission error:", error);
        alert('Error: ' + error.message);
    })
    .finally(() => {
        // Make sure this always runs to reset the button
        if (submitBtn) {
            submitBtn.textContent = originalBtnText;
            submitBtn.disabled = false;
        }
    });
}
  
  // Dummy functions to satisfy the linter.  These need to be defined elsewhere.
  function resetForm(formId) {
    console.warn("resetForm() function needs to be defined.");
  }
  
  function closeModal() {
    console.warn("closeModal() function needs to be defined.");
  }