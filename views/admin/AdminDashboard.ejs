<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Puerto Galera</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
    <style>
        /* Modal animation */
        .modal {
            transition: opacity 0.3s ease;
        }
        .modal-content {
            transition: transform 0.3s ease;
        }
        .modal.active .modal-content {
            transform: translateY(0);
        }
        .modal:not(.active) .modal-content {
            transform: translateY(-50px);
        }
        /* Chart styles */
        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }
    </style>
</head>
<body class="bg-gray-100">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div id="sidebar" class="w-64 bg-blue-900 text-white p-5 space-y-6 absolute inset-y-0 left-0 transform -translate-x-full transition duration-300 ease-in-out md:relative md:translate-x-0">
            <h2 class="text-xl font-bold">Admin Panel</h2>
            <nav class="space-y-2">
                <a href="/admin/dashboard" class="block py-2 px-4 bg-blue-800 rounded">Dashboard</a>
                <a href="/admin/manage-providers" class="block py-2 px-4 hover:bg-blue-700 rounded">Manage Providers</a>
                <a href="/admin/manage-tourists" class="block py-2 px-4 hover:bg-blue-700 rounded">Manage Tourists</a>
                <a href="/admin/manage-location" class="block py-2 px-4 hover:bg-blue-700 rounded">Manage Location</a>
                <a href="/admin/manage-packages" class="block py-2 px-4 hover:bg-blue-700 rounded">Manage Packages</a>
                <a href="/admin/reports" class="block py-2 px-4 hover:bg-blue-700 rounded">Reports</a>
                <a href="/admin/settings" class="block py-2 px-4 hover:bg-blue-700 rounded">Settings</a>
                <a href="/logout" class="block py-2 px-4 bg-red-600 hover:bg-red-700 rounded text-center mt-8">Logout</a>
            </nav>
        </div>
        
        <!-- Content Area -->
        <div class="flex-1 flex flex-col">
            <!-- Navbar -->
            <header class="bg-white shadow-md p-4 flex justify-between items-center">
                <button id="menu-btn" class="md:hidden bg-blue-900 text-white px-3 py-2 rounded">â˜°</button>
                <h1 class="text-xl font-semibold">Admin Dashboard</h1>
                <div class="flex items-center gap-4">
                    <span class="text-gray-600"><%= user.username %></span>
                </div>
            </header>
            
            <!-- Main Content -->
            <main class="p-6 overflow-auto">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
                    <!-- Stats Cards -->
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <h3 class="text-lg font-semibold text-gray-700">Total Tourists</h3>
                        <p class="text-3xl font-bold text-blue-600" id="tourist-count">Loading...</p>
                    </div>
                    
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <h3 class="text-lg font-semibold text-gray-700">Total Users</h3>
                        <p class="text-3xl font-bold text-green-600" id="user-count">Loading...</p>
                    </div>
                    
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <h3 class="text-lg font-semibold text-gray-700">Service Providers</h3>
                        <p class="text-3xl font-bold text-purple-600" id="provider-count">Loading...</p>
                    </div>
                    
                    <div class="bg-white rounded-lg shadow-md p-6">
                        <h3 class="text-lg font-semibold text-gray-700">Packages</h3>
                        <p class="text-3xl font-bold text-orange-600" id="package-count">Loading...</p>
                    </div>
                </div>
                
                <!-- Recent Tourists -->
                <div class="bg-white rounded-lg shadow-md p-6 mb-6">
                    <h3 class="text-lg font-semibold text-gray-700 mb-4">Recent Tourist Registrations</h3>
                    <div class="overflow-x-auto">
                        <table class="min-w-full bg-white">
                            <thead>
                                <tr>
                                    <th class="py-2 px-4 border-b text-left">Name</th>
                                    <th class="py-2 px-4 border-b text-left">Email</th>
                                    <th class="py-2 px-4 border-b text-left">Type</th>
                                    <th class="py-2 px-4 border-b text-left">Date</th>
                                </tr>
                            </thead>
                            <tbody id="recent-tourists-table">
                                <tr>
                                    <td class="py-2 px-4 border-b" colspan="4">Loading...</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <!-- Quick Actions -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold text-gray-700 mb-4">Quick Actions</h3>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <button id="open-provider-modal" class="bg-blue-100 hover:bg-blue-200 p-4 rounded-lg text-center">
                            <i class="fas fa-user-tie text-2xl text-blue-600 mb-2"></i>
                            <p>Add Service Provider</p>
                        </button>
                        <button id="open-package-modal" class="bg-green-100 hover:bg-green-200 p-4 rounded-lg text-center">
                            <i class="fas fa-box text-2xl text-green-600 mb-2"></i>
                            <p>Create Package</p>
                        </button>
                        <button id="open-reports-modal" class="bg-purple-100 hover:bg-purple-200 p-4 rounded-lg text-center">
                            <i class="fas fa-chart-bar text-2xl text-purple-600 mb-2"></i>
                            <p>View Reports</p>
                        </button>
                    </div>
                </div>
            </main>
        </div>
    </div>
    
    <!-- Add Service Provider Modal -->
    <div id="provider-modal" class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="modal-content bg-white rounded-lg shadow-xl w-full max-w-2xl mx-4 p-6 transform">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-gray-800">Add Service Provider</h3>
                <button class="close-modal text-gray-600 hover:text-gray-800">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="provider-form" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Username</label>
                        <input type="text" name="username" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Email</label>
                        <input type="email" name="email" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">First Name</label>
                        <input type="text" name="first_name" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Last Name</label>
                        <input type="text" name="last_name" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Contact Number</label>
                        <input type="text" name="contact_number" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Password</label>
                        <input type="password" name="password" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Provider Type</label>
                        <select name="provider_type" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                            <option value="entry_provider">Entry Provider</option>
                            <option value="activity_provider">Activity Provider</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Gender</label>
                        <select name="gender" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="pt-4 flex justify-end space-x-3">
                    <button type="button" class="close-modal px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">Add Provider</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- Create Package Modal -->
    <div id="package-modal" class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="modal-content bg-white rounded-lg shadow-xl w-full max-w-2xl mx-4 p-6 transform">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-gray-800">Create Package</h3>
                <button class="close-modal text-gray-600 hover:text-gray-800">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="package-form" class="space-y-4" enctype="multipart/form-data">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Package Name</label>
                        <input type="text" name="name" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Price</label>
                        <input type="number" name="price" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Duration (hours)</label>
                        <input type="number" name="duration" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Max Participants</label>
                        <input type="number" name="max_participants" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50">
                    </div>
                    <div class="md:col-span-2">
                        <label class="block text-sm font-medium text-gray-700">Description</label>
                        <textarea name="description" rows="3" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50"></textarea>
                    </div>
                    <div class="md:col-span-2">
                        <label class="block text-sm font-medium text-gray-700">What's Included</label>
                        <textarea name="includes" rows="2" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-500 focus:ring-opacity-50"></textarea>
                    </div>
                    <div class="md:col-span-2">
                        <label class="block text-sm font-medium text-gray-700">Package Image</label>
                        <input type="file" name="image" accept="image/*" required class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100">
                    </div>
                </div>
                <div class="pt-4 flex justify-end space-x-3">
                    <button type="button" class="close-modal px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700">Create Package</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- View Reports Modal -->
    <div id="reports-modal" class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
        <div class="modal-content bg-white rounded-lg shadow-xl w-full max-w-4xl mx-4 p-6 transform">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-gray-800">Tourist Reports</h3>
                <button class="close-modal text-gray-600 hover:text-gray-800">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="space-y-6">
                <!-- Report Tabs -->
                <div class="border-b border-gray-200">
                    <nav class="flex -mb-px">
                        <button class="report-tab text-blue-600 border-b-2 border-blue-500 py-2 px-4" data-tab="by-type">By Type</button>
                        <button class="report-tab text-gray-500 hover:text-gray-700 py-2 px-4" data-tab="by-nationality">By Nationality</button>
                        <button class="report-tab text-gray-500 hover:text-gray-700 py-2 px-4" data-tab="by-month">By Month</button>
                    </nav>
                </div>
                
                <!-- Report Content -->
                <div id="report-content">
                    <!-- By Type Tab -->
                    <div id="by-type-content" class="report-content">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="chart-container">
                                <canvas id="type-chart"></canvas>
                            </div>
                            <div>
                                <h4 class="font-semibold text-lg mb-2">Tourist Types</h4>
                                <div class="overflow-x-auto">
                                    <table class="min-w-full bg-white">
                                        <thead>
                                            <tr>
                                                <th class="py-2 px-4 border-b text-left">Type</th>
                                                <th class="py-2 px-4 border-b text-left">Count</th>
                                                <th class="py-2 px-4 border-b text-left">Percentage</th>
                                            </tr>
                                        </thead>
                                        <tbody id="type-table">
                                            <tr>
                                                <td class="py-2 px-4 border-b" colspan="3">Loading...</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- By Nationality Tab -->
                    <div id="by-nationality-content" class="report-content hidden">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="chart-container">
                                <canvas id="nationality-chart"></canvas>
                            </div>
                            <div>
                                <h4 class="font-semibold text-lg mb-2">Top Nationalities</h4>
                                <div class="overflow-x-auto">
                                    <table class="min-w-full bg-white">
                                        <thead>
                                            <tr>
                                                <th class="py-2 px-4 border-b text-left">Nationality</th>
                                                <th class="py-2 px-4 border-b text-left">Count</th>
                                                <th class="py-2 px-4 border-b text-left">Percentage</th>
                                            </tr>
                                        </thead>
                                        <tbody id="nationality-table">
                                            <tr>
                                                <td class="py-2 px-4 border-b" colspan="3">Loading...</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- By Month Tab -->
                    <div id="by-month-content" class="report-content hidden">
                        <div class="chart-container">
                            <canvas id="month-chart"></canvas>
                        </div>
                        <div class="mt-4">
                            <h4 class="font-semibold text-lg mb-2">Monthly Statistics</h4>
                            <div class="overflow-x-auto">
                                <table class="min-w-full bg-white">
                                    <thead>
                                        <tr>
                                            <th class="py-2 px-4 border-b text-left">Month</th>
                                            <th class="py-2 px-4 border-b text-left">Tourist Count</th>
                                            <th class="py-2 px-4 border-b text-left">Change</th>
                                        </tr>
                                    </thead>
                                    <tbody id="month-table">
                                        <tr>
                                            <td class="py-2 px-4 border-b" colspan="3">Loading...</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="pt-4 flex justify-end">
                    <button type="button" class="close-modal px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300">Close</button>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Include Chart.js for reports -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        // Mobile menu toggle
        const menuBtn = document.getElementById('menu-btn');
        const sidebar = document.getElementById('sidebar');
        
        menuBtn.addEventListener('click', () => {
            sidebar.classList.toggle('-translate-x-full');
        });
        
        // Fetch dashboard data
        async function fetchDashboardData() {
            try {
                const response = await fetch('/admin/dashboard-data');
                const data = await response.json();
                
                // Update stats with fallbacks
                document.getElementById('tourist-count').textContent = data.counts?.tourists || 0;
                document.getElementById('user-count').textContent = data.counts?.users || 0;
                document.getElementById('provider-count').textContent = data.counts?.providers || 0;
                
                // Update recent tourists table
                const tableBody = document.getElementById('recent-tourists-table');
                tableBody.innerHTML = '';
                
                if (data.recentTourists && data.recentTourists.length > 0) {
                    data.recentTourists.forEach(tourist => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td class="py-2 px-4 border-b">${tourist.first_name || ''} ${tourist.last_name || ''}</td>
                            <td class="py-2 px-4 border-b">${tourist.email || ''}</td>
                            <td class="py-2 px-4 border-b">${tourist.registration_type || 'Regular Tourist'}</td>
                            <td class="py-2 px-4 border-b">${tourist.created_at ? new Date(tourist.created_at).toLocaleDateString() : ''}</td>
                        `;
                        tableBody.appendChild(row);
                    });
                } else {
                    tableBody.innerHTML = '<tr><td class="py-2 px-4 border-b" colspan="4">No recent tourists</td></tr>';
                }
                
                // Fetch package count
                try {
                    const packagesResponse = await fetch('/admin/packages');
                    if (packagesResponse.ok) {
                        const packages = await packagesResponse.json();
                        document.getElementById('package-count').textContent = Array.isArray(packages) ? packages.length : 0;
                    } else {
                        document.getElementById('package-count').textContent = 0;
                    }
                } catch (packageError) {
                    console.error('Error fetching packages:', packageError);
                    document.getElementById('package-count').textContent = 0;
                }
                
            } catch (error) {
                console.error('Error fetching dashboard data:', error);
                // Set default values on error
                document.getElementById('tourist-count').textContent = 0;
                document.getElementById('user-count').textContent = 0;
                document.getElementById('provider-count').textContent = 0;
                document.getElementById('package-count').textContent = 0;
                
                const tableBody = document.getElementById('recent-tourists-table');
                tableBody.innerHTML = '<tr><td class="py-2 px-4 border-b text-red-500" colspan="4">Error loading data</td></tr>';
            }
        }
        
        // Modal handling
        function setupModals() {
            // Provider Modal
            const providerModal = document.getElementById('provider-modal');
            const openProviderModal = document.getElementById('open-provider-modal');
            const providerForm = document.getElementById('provider-form');
            
            // Package Modal
            const packageModal = document.getElementById('package-modal');
            const openPackageModal = document.getElementById('open-package-modal');
            const packageForm = document.getElementById('package-form');
            
            // Reports Modal
            const reportsModal = document.getElementById('reports-modal');
            const openReportsModal = document.getElementById('open-reports-modal');
            const reportTabs = document.querySelectorAll('.report-tab');
            
            // Open modals
            openProviderModal.addEventListener('click', () => {
                providerModal.classList.remove('hidden');
                setTimeout(() => providerModal.classList.add('active'), 10);
            });
            
            openPackageModal.addEventListener('click', () => {
                packageModal.classList.remove('hidden');
                setTimeout(() => packageModal.classList.add('active'), 10);
            });
            
            openReportsModal.addEventListener('click', () => {
                reportsModal.classList.remove('hidden');
                setTimeout(() => reportsModal.classList.add('active'), 10);
                loadReports('by-type');
            });
            
            // Close modals
            document.querySelectorAll('.close-modal').forEach(button => {
                button.addEventListener('click', () => {
                    document.querySelectorAll('.modal').forEach(modal => {
                        modal.classList.remove('active');
                        setTimeout(() => modal.classList.add('hidden'), 300);
                    });
                });
            });
            
            // Report tabs
            reportTabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    // Update active tab
                    reportTabs.forEach(t => {
                        t.classList.remove('text-blue-600', 'border-b-2', 'border-blue-500');
                        t.classList.add('text-gray-500', 'hover:text-gray-700');
                    });
                    tab.classList.remove('text-gray-500', 'hover:text-gray-700');
                    tab.classList.add('text-blue-600', 'border-b-2', 'border-blue-500');
                    
                    // Show selected content
                    const tabId = tab.getAttribute('data-tab');
                    document.querySelectorAll('.report-content').forEach(content => {
                        content.classList.add('hidden');
                    });
                    document.getElementById(`${tabId}-content`).classList.remove('hidden');
                    
                    // Load report data
                    loadReports(tabId);
                });
            });
            
            // Submit provider form
            providerForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(providerForm);
                const providerData = Object.fromEntries(formData.entries());
                
                try {
                    const response = await fetch('/admin/providers', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(providerData)
                    });
                    
                    if (response.ok) {
                        const result = await response.json();
                        alert('Service provider created successfully!');
                        providerForm.reset();
                        providerModal.classList.remove('active');
                        setTimeout(() => providerModal.classList.add('hidden'), 300);
                        fetchDashboardData(); // Refresh dashboard data
                    } else {
                        const error = await response.json();
                        alert(`Error: ${error.error || 'Failed to create service provider'}`);
                    }
                } catch (error) {
                    console.error('Error creating provider:', error);
                    alert('An error occurred while creating the service provider');
                }
            });
            
            // Submit package form
            packageForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(packageForm);
                
                try {
                    const response = await fetch('/admin/packages', {
                        method: 'POST',
                        body: formData // Using FormData for file upload
                    });
                    
                    if (response.ok) {
                        const result = await response.json();
                        alert('Package created successfully!');
                        packageForm.reset();
                        packageModal.classList.remove('active');
                        setTimeout(() => packageModal.classList.add('hidden'), 300);
                        fetchDashboardData(); // Refresh dashboard data
                    } else {
                        const error = await response.json();
                        alert(`Error: ${error.error || 'Failed to create package'}`);
                    }
                } catch (error) {
                    console.error('Error creating package:', error);
                    alert('An error occurred while creating the package');
                }
            });
        }
        
        // Load reports data and create charts
        async function loadReports(reportType) {
            try {
                const response = await fetch('/admin/tourist-stats');
                if (!response.ok) {
                    throw new Error('Failed to fetch tourist statistics');
                }
                
                const data = await response.json();
                
                switch (reportType) {
                    case 'by-type':
                        renderTypeReport(data.byType);
                        break;
                    case 'by-nationality':
                        renderNationalityReport(data.byNationality);
                        break;
                    case 'by-month':
                        renderMonthReport(data.byMonth);
                        break;
                }
            } catch (error) {
                console.error('Error loading reports:', error);
                document.querySelectorAll('#type-table, #nationality-table, #month-table').forEach(table => {
                    table.innerHTML = `<tr><td class="py-2 px-4 border-b text-red-500" colspan="3">Error loading report data</td></tr>`;
                });
            }
        }
        
        // Render tourist type report
        function renderTypeReport(data) {
            if (!data || !data.length) {
                document.getElementById('type-table').innerHTML = `<tr><td class="py-2 px-4 border-b" colspan="3">No data available</td></tr>`;
                return;
            }
            
            // Prepare chart data
            const labels = data.map(item => item.type);
            const counts = data.map(item => item.count);
            const total = counts.reduce((sum, count) => sum + count, 0);
            
            // Create chart
            const ctx = document.getElementById('type-chart').getContext('2d');
            if (window.typeChart) window.typeChart.destroy();
            window.typeChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: counts,
                        backgroundColor: [
                            'rgba(54, 162, 235, 0.7)',
                            'rgba(255, 99, 132, 0.7)',
                            'rgba(255, 206, 86, 0.7)',
                            'rgba(75, 192, 192, 0.7)',
                            'rgba(153, 102, 255, 0.7)'
                        ],
                        borderColor: [
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 99, 132, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right'
                        }
                    }
                }
            });
            
            // Update table
            const tableBody = document.getElementById('type-table');
            tableBody.innerHTML = '';
            
            data.forEach(item => {
                const percentage = total > 0 ? ((item.count / total) * 100).toFixed(1) : '0.0';
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="py-2 px-4 border-b">${item.type}</td>
                    <td class="py-2 px-4 border-b">${item.count}</td>
                    <td class="py-2 px-4 border-b">${percentage}%</td>
                `;
                tableBody.appendChild(row);
            });
        }
        
        // Render nationality report
        function renderNationalityReport(data) {
            if (!data || !data.length) {
                document.getElementById('nationality-table').innerHTML = `<tr><td class="py-2 px-4 border-b" colspan="3">No data available</td></tr>`;
                return;
            }
            
            // Prepare chart data
            const labels = data.map(item => item.nationality);
            const counts = data.map(item => item.count);
            const total = counts.reduce((sum, count) => sum + count, 0);
            
            // Create chart
            const ctx = document.getElementById('nationality-chart').getContext('2d');
            if (window.nationalityChart) window.nationalityChart.destroy();
            window.nationalityChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Tourist Count',
                        data: counts,
                        backgroundColor: 'rgba(75, 192, 192, 0.7)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
            
            // Update table
            const tableBody = document.getElementById('nationality-table');
            tableBody.innerHTML = '';
            
            data.forEach(item => {
                const percentage = total > 0 ? ((item.count / total) * 100).toFixed(1) : '0.0';
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="py-2 px-4 border-b">${item.nationality}</td>
                    <td class="py-2 px-4 border-b">${item.count}</td>
                    <td class="py-2 px-4 border-b">${percentage}%</td>
                `;
                tableBody.appendChild(row);
            });
        }
        
        // Render monthly report
        function renderMonthReport(data) {
            if (!data || !data.length) {
                document.getElementById('month-table').innerHTML = `<tr><td class="py-2 px-4 border-b" colspan="3">No data available</td></tr>`;
                return;
            }
            
            // Prepare chart data
            const labels = data.map(item => item.month);
            const counts = data.map(item => item.count);
            
            // Create chart
            const ctx = document.getElementById('month-chart').getContext('2d');
            if (window.monthChart) window.monthChart.destroy();
            window.monthChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Tourist Count',
                        data: counts,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        tension: 0.3,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
            
            // Update table
            const tableBody = document.getElementById('month-table');
            tableBody.innerHTML = '';
            
            data.forEach((item, index) => {
                const prevCount = index > 0 ? data[index - 1].count : 0;
                const change = item.count - prevCount;
                const changeText = index === 0 ? 'N/A' : 
                    change > 0 ? `+${change} (â†‘)` : 
                    change < 0 ? `${change} (â†“)` : '0 (-)';
                
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td class="py-2 px-4 border-b">${item.month}</td>
                    <td class="py-2 px-4 border-b">${item.count}</td>
                    <td class="py-2 px-4 border-b ${change > 0 ? 'text-green-600' : change < 0 ? 'text-red-600' : ''}">${changeText}</td>
                `;
                tableBody.appendChild(row);
            });
        }
        
        // Initialize everything when page loads
        document.addEventListener('DOMContentLoaded', () => {
            fetchDashboardData();
            setupModals();
        });
    </script>
</body>
</html>
